
import SegaMasterSystem
// millfork.exe main.mfk -t SegaMasterSystem -i .
// basic example of getting a tilemap and sprite on screen and moving with joystick 

void main()
{
	word i	
	byte spriteX0
	byte spriteY0
	byte spriteX1
	byte spriteY1

	disable_irq()

#if INIT_RW_MEMORY
	// do a bankswitch to the SEGMENT segment if applicable
	init_rw_memory()
#endif

	VREG(VDP_MODE_CTRL_0,VDP_REG0_MODE4)
	VREG(VDP_MODE_CTRL_1,0)
	//	for SMS 1 these should have all bits set 
	//	for default values 
	VREG(VDP_NAMETABLE_BASE,$ff)	
	VREG(VDP_COLORTABLE_BASE,$ff)	
	VREG(VDP_PATTERN_BASE,$ff)	
	VREG(VDP_SATB_BASE,$ff)	
	VREG(VDP_SPR_PATTERN_BASE,$ff)	
	VREG(VDP_BG_COLOR,$01)	//	bg color	
	VREG(VDP_X_SCROLL,$00) //	xscroll
	VREG(VDP_Y_SCROLL,$00)	//	yscroll 
	VREG(VDP_LINE_COUNTER,$ff)	//	line counter

	//	clear all sprites out
	VFILL(VDP_STABy,0,256)

	//	upload some data
	VUPLOAD(VDP_TILE_CLUT,Palette.addr,Palette.length)
	VUPLOAD(VDP_SPRITE_CLUT,SprPalette.addr,SprPalette.length)
	VUPLOAD(VDP_TILES,Tiles.addr,Tiles.length)

	spriteX0 = 128
	spriteY0 = 128
	spriteX1 = 192
	spriteY1 = 128

	//	write to nametable
	VOUT(VDP_CTRL,$00)
	VOUT(VDP_CTRL,$38 | $40)
	for i,0,until,Tilemap.length
	{
		VOUT(VDP_DATA,Tilemap[i])
		VOUT(VDP_DATA,$00)
	}

	//	use the same image for sprites
	VUPLOAD(VDP_SPRITES,Tiles.addr,Tiles.length)
	//	enable the display and IRQ
	VREG(VDP_MODE_CTRL_1,VDP_REG1_240_MODE | VDP_REG1_EN_DISPLAY | VDP_REG1_EN_FRM_IRQ  )

	enable_irq()

	while true
	{ 
		WaitVsync()

		//	sprite Y is a 64 byte array of just Y positions
		VOUT(VDP_CTRL,$00)
		VOUT(VDP_CTRL,$3f| $40)	//	updating sprite Y 

		VOUT(VDP_DATA,spriteY0)
		VOUT(VDP_DATA,spriteY1)

		//	sprite XI is a 128 byte array of X followed by Sprite ID for each sprite 
		//	XIXIXIXIXI 

		VOUT(VDP_CTRL,$80)
		VOUT(VDP_CTRL,$3f | $40)	//	updating sprite X & ID 
		//	sprite 0 
		VOUT(VDP_DATA,spriteX0)
		VOUT(VDP_DATA,0)
		//	sprite 1
		VOUT(VDP_DATA,spriteX1)
		VOUT(VDP_DATA,0)

		read_joy1()
		spriteX0+=input_dx
		spriteY0+=input_dy

		read_joy2()
		spriteX1+=input_dx
		spriteY1+=input_dy

	}
}

const array Tiles = [
	$FF,$FF,$00,$00,$81,$FF,$00,$00,$BD,$FF,$00,$00,$BD,$E7,$00,$00,$BD,$E7,$00,$00,$BD,$FF,$00,$00,$81,$FF,$00,$00,$FF,$FF,$00,$00,
	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00	
]

const array Tilemap = [
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00

]

//	16 entries , we only use 4 here 
const array Palette=[ $01,$3F,$2A,$12]
//	set sprites as a different colorset 
const array SprPalette=[ $01,$3F,$2A,$14]
