
import gbc_hardware
import gbc_joy

import stdio

array oam_buffer[$a0] align(256)
array oam_xd[40]
array oam_yd[40]

sbyte sprite_direction
byte old_a

void on_vblank(){
		pointer oam_out

    sprite_dma(oam_buffer.addr.hi)
    react_to_input()
		oam_out = oam_buffer.addr+4

		for old_a,1,until,40 
		{
			oam_out[0]+=oam_yd[old_a]
			oam_out[1]+=oam_xd[old_a]
			if (oam_out[0] < 16) {
				oam_yd[old_a]=1
			} 
			if (oam_out[0] > 142) {
				oam_yd[old_a]=$ff
			} 

			if (oam_out[1] < 16) {
				oam_xd[old_a]=1
			} 
			if (oam_out[1] > 142) {
				oam_xd[old_a]=$ff
			} 
			oam_out+=4
		}
//		reg_scroll_x+=sprite_direction;
//		reg_scroll_y=oam_buffer[0];


}
void on_lcdc(){

}
void on_timer(){

}
void on_serial(){

}
void on_joypad(){

}

void react_to_input() {
    read_joy()
    if old_a == 0 && input_a != 0 { // A button
        low_c()
    }
    old_a = input_a
    if input_dy < 0 { // Up button
        if oam_buffer[0] > 16 { oam_buffer[0] -= 1}
    }
    if input_dy > 0 { // Down button
        if oam_buffer[0] < 152 { oam_buffer[0] += 1}
    }
    if input_dx < 0 { // Up button
        if oam_buffer[1] > 16 { oam_buffer[1] -= 1}
    }
    if input_dx > 0 { // Down button
        if oam_buffer[1] < 152 { oam_buffer[1] += 1}
    }

}

void low_c() {
}

void high_c() {
}


const array rdir=[-1,1]

void main() {
    byte i
		pointer oam_out
    for i,0,paralleluntil,$a0 {
        oam_buffer[i] = 0
    }
    reg_obj0_palette = 0q2222

    load_charset()

    reg_lcd_ctrl = lcd_tile_8000 | lcd_bg_on | lcd_obj_on | lcd_win_off | lcd_map_9800
    enable_lcd()
    enable_irq()
//    putstrz("HELLO WORLD"z)
//    new_line()
    sprite_direction = 1
		oam_out = oam_buffer.addr
		for i,0,until,40 
		{
			oam_out[0] = (rand()*3)&$7f	//	Y
			oam_out[1] = (rand()*3)&$7f	//	X
			oam_out[2] = 0
			oam_out[3] = 0
			oam_xd[i] = rdir[(rand()>>3)&1]
			oam_yd[i] = rdir[(rand()>>4)&1]
			oam_out+=4
		}
    while(true){}
}

void load_charset() {
	pointer s
	pointer d
	word id
	byte index
	s = AdvChars.addr
	d = $8000
	while s < AdvChars.addr + AdvChars.length {
			d[0] = s[0]
			d += 1
			s += 1
	}
	reg_cgb_vram_bank=0;
	s = AdvTilemap.addr
	d = $9800
	while s < AdvTilemap.addr + AdvTilemap.length {
			d[0] = s[0]
			d += 1
			s += 1
	}

	//	attributes go in bank 1 
	reg_cgb_vram_bank=1;
	s = AdvTilemap.addr
	d = $9800
	while s < AdvTilemap.addr + AdvTilemap.length {
			d[0] = s.hi&1
			d += 1
			s += 1
	}
	reg_cgb_vram_bank=0;

	cgb_bg_rgb(0,0,0,0)
	cgb_bg_rgb(1,$08,$04,$00)
	cgb_bg_rgb(2,$10,$06,$02)
	cgb_bg_rgb(3,$1e,$1e,$1e)
	cgb_bg_rgb(4,0,0,0)
	cgb_bg_rgb(5,$00,$08,$0c)
	cgb_bg_rgb(6,$02,$0c,$14)
	cgb_bg_rgb(7,$1e,$1e,$1e)

	cgb_spr_rgb(0,0,0,0)
	cgb_spr_rgb(1,$00,$08,$0c)
	cgb_spr_rgb(2,$02,$0c,$14)
	cgb_spr_rgb(3,$1e,$1e,$1e)
}


const array AdvTilemap = [
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
	$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00

	]

const array AdvChars = [
		$FD,$FE,$C2,$FC,$82,$FC,$82,$FC,$82,$FC,$82,$FC,$7E,$80,$80,$00,
		$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
		00
]

byte RandomIndex = 123;
byte rand()
{
	RandomIndex+=1
	return RandomTable[RandomIndex];

}
const array RandomTable = [
	$3B,$02,$B7,$6B,$08,$74,$1A,$5D,$21,$99,$95,$66,$D5,$59,$05,$42,
	$F8,$03,$0F,$53,$7D,$8F,$57,$FB,$48,$26,$F2,$4A,$3D,$E4,$1D,$D9,
	$9D,$DC,$2F,$F5,$92,$5C,$CC,$00,$73,$15,$BF,$B1,$BB,$EB,$9E,$2E,
	$32,$FC,$4B,$CD,$A7,$E6,$C2,$10,$11,$80,$52,$B2,$DA,$77,$4F,$EC,
	$13,$54,$64,$ED,$94,$8C,$C6,$9A,$19,$9F,$75,$FA,$AA,$8D,$FE,$91,
	$01,$23,$07,$C1,$40,$18,$51,$76,$3C,$BD,$2A,$88,$2D,$F1,$8A,$72,
	$F6,$98,$35,$97,$68,$93,$B3,$0C,$82,$4E,$CB,$39,$D8,$5F,$C7,$D4,
	$CE,$AE,$6D,$A3,$7C,$6A,$B8,$A6,$6F,$5E,$E5,$1B,$F4,$B5,$3A,$14,
	$78,$FD,$D0,$7A,$47,$2C,$A8,$1E,$EA,$2B,$9C,$86,$83,$E1,$7B,$71,
	$F0,$FF,$D1,$C3,$DB,$0E,$46,$1C,$C9,$16,$61,$55,$AD,$36,$81,$F3,
	$DF,$43,$C5,$B4,$AF,$79,$7F,$AC,$F9,$37,$E7,$0A,$22,$D3,$A0,$5A,
	$06,$17,$EF,$67,$60,$87,$20,$56,$45,$D7,$6E,$58,$A9,$B0,$62,$BA,
	$E3,$0D,$25,$09,$DE,$44,$49,$69,$9B,$65,$B9,$E0,$41,$A4,$6C,$CF,
	$A1,$31,$D6,$29,$A2,$3F,$E2,$96,$34,$EE,$DD,$C0,$CA,$63,$33,$5B,
	$70,$27,$F7,$1F,$BE,$12,$B6,$50,$BC,$4D,$28,$C8,$84,$30,$A5,$4C,
	$AB,$E9,$8E,$E8,$7E,$C4,$89,$8B,$0B,$24,$85,$3E,$38,$04,$D2,$90
]

