
import MSX
//	millfork main.mfk -t msx -i .
// 	basic example of getting a tilemap and sprite on screen and moving with joystick 
//  NOTE: joystick is broken currently with optimization ?

array oam_buffer [256]

void main()
{
	word i	
	byte spriteX0
	byte spriteY0

	disable_irq()

#if INIT_RW_MEMORY
	// do a bankswitch to the SEGMENT segment if applicable
	init_rw_memory()
#endif

	disable_display()
	enable_sprites()
	screen_mode(1)
	//	tile data
	VUPLOAD(0,Tiles.addr,Tiles.length)
	//	name table
	VUPLOAD($1800,Tilemap.addr,Tilemap.length)
	//	sprites
	VUPLOAD($3800,Tiles.addr,Tiles.length)

	WRTVDP(%11100010,1)

	enable_irq()
	enable_display()

	spriteX0=128
	spriteY0=128

	while true
	{ 
		WaitVsync()
		//	not working correctly
		read_joy1()
		spriteX0+=input_dx
		spriteY0+=input_dy

		oam_buffer[0] = spriteY0
		oam_buffer[1] = spriteX0
		oam_buffer[2] = 0
		oam_buffer[3] = $28

		VUPLOAD($1b00,oam_buffer.addr,64)

	}
}

const array Tiles = [
	255, 129, 129, 153, 153, 129, 129, 255,
	0,0,0,0,0,0,0,0
]

const array Tilemap = [
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00,
 $00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01 ,$01 ,$01 ,$01 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00

]

//	16 entries , we only use 4 here 
const array Palette=[ $01,$3F,$2A,$12]
//	set sprites as a different colorset 
const array SprPalette=[ $01,$3F,$2A,$14]
